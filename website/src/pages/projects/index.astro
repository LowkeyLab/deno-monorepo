---
import Layout from "../../layouts/Layout.astro";
import ProjectCard from "../../components/ProjectCard.astro";
import CallToAction from "../../components/CallToAction.astro";
import dummyImage from "../../assets/dummy.png";
import { getCollection } from "astro:content";

// Get all projects from the collection
const projects = await getCollection("projects");

// Sort by featured projects first
const sortedProjects = projects.sort((a, b) => {
  if (a.data.featured && !b.data.featured) return -1;
  if (!a.data.featured && b.data.featured) return 1;
  return a.data.title.localeCompare(b.data.title);
});

// Count frequency of each tag
const tagFrequency = projects
  .flatMap((project) => project.data.tags)
  .reduce(
    (acc, tag) => {
      acc[tag] = (acc[tag] || 0) + 1;
      return acc;
    },
    {} as Record<string, number>
  );

// Extract all unique tags and sort by frequency (most used first)
const allTags = [
  ...new Set(projects.flatMap((project) => project.data.tags)),
].sort((a, b) => tagFrequency[b] - tagFrequency[a]);
---

<Layout
  title="Projects | Tim Tran"
  description="Projects and work by Tim Tran - Software Engineer"
  activeItem="projects"
>
  <header class="mb-12 text-center">
    <h1 class="text-4xl font-bold text-base-content mb-3">My Projects</h1>
    <p class="text-xl text-base-content/80 max-w-3xl mx-auto">
      A collection of my recent work, open source contributions, and side
      projects.
    </p>
  </header>

  <!-- Filter/Category section -->
  <div class="flex justify-center mb-10 flex-wrap gap-2">
    <button class="tag-filter btn btn-dash btn-sm btn-active" data-tag="all"
      >All</button
    >
    {
      allTags.map((tag) => (
        <button class="tag-filter btn btn-dash btn-sm" data-tag={tag}>
          {tag}
        </button>
      ))
    }
  </div>

  <!-- Projects Grid -->
  <div
    class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
    id="projects-grid"
  >
    {
      sortedProjects.map((project) => (
        <div class="project-card" data-tags={project.data.tags.join(",")}>
          <ProjectCard
            title={project.data.title}
            description={project.data.description}
            tags={project.data.tags}
            image={project.data.cover || dummyImage}
            imageAlt="Project cover"
            links={project.data.links}
            slug={project.id}
          />
        </div>
      ))
    }
  </div>

  <!-- Call to Action -->
  <CallToAction />
</Layout>

<script>
  // Client-side script for filtering projects by tags
  document.addEventListener("DOMContentLoaded", () => {
    const filterButtons = document.querySelectorAll(".tag-filter");
    const projectCards = document.querySelectorAll(".project-card");

    // Add click event listener to each filter button
    filterButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const selectedTag = button.getAttribute("data-tag") || "all";

        // Update active button styles
        filterButtons.forEach((btn) => btn.classList.remove("btn-active"));
        button.classList.add("btn-active");

        // Filter the projects using Tailwind classes
        projectCards.forEach((card) => {
          const cardTags = card.getAttribute("data-tags")?.split(",") || [];

          if (selectedTag === "all" || cardTags.includes(selectedTag)) {
            card.classList.remove("hidden");
          } else {
            card.classList.add("hidden");
          }
        });
      });
    });
  });
</script>
